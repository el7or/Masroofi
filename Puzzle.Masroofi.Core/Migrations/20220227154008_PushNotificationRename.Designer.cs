// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Puzzle.Masroofi.Core;

namespace Puzzle.Masroofi.Core.Migrations
{
    [DbContext(typeof(MasroofiDbContext))]
    [Migration("20220227154008_PushNotificationRename")]
    partial class PushNotificationRename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCard", b =>
                {
                    b.Property<Guid>("ATMCardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("ATMCardTypeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("CardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 100001)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RejectedReason")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("SecurityCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ShortNumber")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid>("SonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("ATMCardId");

                    b.HasIndex("ATMCardTypeId");

                    b.HasIndex("SonId");

                    b.ToTable("ATMCards");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardHistory", b =>
                {
                    b.Property<Guid>("ATMCardHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("ATMCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("HistoryType")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("ATMCardHistoryId");

                    b.HasIndex("ATMCardId");

                    b.ToTable("ATMCardHistories");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardTransaction", b =>
                {
                    b.Property<Guid>("ATMCardTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid>("ATMCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DetailsAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DetailsEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<Guid?>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid>("SonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ATMCardTransactionId");

                    b.HasIndex("ATMCardId");

                    b.HasIndex("POSMachineId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SonId");

                    b.HasIndex("VendorId");

                    b.ToTable("ATMCardTransactions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardType", b =>
                {
                    b.Property<Guid>("ATMCardTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("BackImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Cost")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FrontImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypeNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ATMCardTypeId");

                    b.ToTable("ATMCardTypes");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ActionsInRoles", b =>
                {
                    b.Property<Guid>("ActionsInRolesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SystemPageActionId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ActionsInRolesId");

                    b.HasIndex("RoleId");

                    b.HasIndex("SystemPageActionId");

                    b.ToTable("ActionsInRoles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CityNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CityNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.CommissionSetting", b =>
                {
                    b.Property<Guid>("CommissionSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("FixedCommission")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FromValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PercentageCommission")
                        .HasColumnType("int");

                    b.Property<decimal>("ToValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VendorFixedCommission")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VendorPercentageCommission")
                        .HasColumnType("int");

                    b.HasKey("CommissionSettingId");

                    b.ToTable("CommissionSettings");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Governorate", b =>
                {
                    b.Property<int>("GovernorateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("GovernorateNameAr")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("GovernorateNameEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GovernorateId");

                    b.ToTable("Governorates");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.NotificationSchedule", b =>
                {
                    b.Property<Guid>("NotificationScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("GlobalType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasError")
                        .HasColumnType("bit");

                    b.Property<bool>("HasSend")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("NotificationData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationTextEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<DateTime>("PostDatetime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PrioritySend")
                        .HasColumnType("int");

                    b.Property<Guid>("RecordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ScheduleDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("SendDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("NotificationScheduleId");

                    b.ToTable("NotificationSchedules");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachine", b =>
                {
                    b.Property<Guid>("POSMachineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("POSModel")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("POSNumber")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("POSMachineId");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.HasIndex("VendorId");

                    b.ToTable("POSMachines");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachineLoginHistory", b =>
                {
                    b.Property<Guid>("POSMachineLoginHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("LoginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("POSMachineLoginHistoryId");

                    b.HasIndex("POSMachineId");

                    b.ToTable("POSMachineLoginHistories");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachinePinCodeHistory", b =>
                {
                    b.Property<Guid>("POSMachinePinCodeHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<int>("HistoryType")
                        .HasColumnType("int");

                    b.Property<Guid>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("POSMachinePinCodeHistoryId");

                    b.HasIndex("POSMachineId");

                    b.ToTable("POSMachinePinCodeHistories");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachineTransaction", b =>
                {
                    b.Property<Guid>("POSMachineTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid?>("ATMCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DetailsAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DetailsEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid?>("ReferenceTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("SonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("POSMachineTransactionId");

                    b.HasIndex("ATMCardId");

                    b.HasIndex("AdminUserId");

                    b.HasIndex("POSMachineId");

                    b.HasIndex("ParentId");

                    b.HasIndex("ReferenceTransactionId");

                    b.HasIndex("SonId");

                    b.HasIndex("VendorId");

                    b.ToTable("POSMachineTransactions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Parent", b =>
                {
                    b.Property<Guid>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrentBalance")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<long>("WalletNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 100001)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("ParentId");

                    b.HasIndex("CityId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentLoginHistory", b =>
                {
                    b.Property<Guid>("ParentLoginHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("LoginDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentLoginHistoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentLoginHistories");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentMobileRegistration", b =>
                {
                    b.Property<Guid>("ParentMobileRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RegisterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegisterType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasComment("Device type (Android,IOS,...)");

                    b.HasKey("ParentMobileRegistrationId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentMobileRegistrations");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentNotification", b =>
                {
                    b.Property<Guid>("NotificationParentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("NotificationScheduleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("NotificationParentId");

                    b.HasIndex("NotificationScheduleId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentNotifications");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentPinCodeHistory", b =>
                {
                    b.Property<Guid>("ParentPinCodeHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<int>("HistoryType")
                        .HasColumnType("int");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.HasKey("ParentPinCodeHistoryId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentPinCodeHistories");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentWalletTransaction", b =>
                {
                    b.Property<Guid>("ParentWalletTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<Guid?>("ATMCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("DetailsAr")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("DetailsEn")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PaymentType")
                        .HasColumnType("int");

                    b.Property<Guid?>("SonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TitleAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TransactionDataJson")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<long>("TransactionNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TransactionReference")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ParentWalletTransactionId");

                    b.HasIndex("ATMCardId");

                    b.HasIndex("AdminUserId");

                    b.HasIndex("POSMachineId");

                    b.HasIndex("ParentId");

                    b.HasIndex("SonId");

                    b.HasIndex("VendorId");

                    b.ToTable("ParentWalletTransactions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.RefreshToken", b =>
                {
                    b.Property<Guid>("RefreshTokenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedByIp")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<string>("ReplacedByToken")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime?>("Revoked")
                        .HasColumnType("datetime");

                    b.Property<string>("RevokedByIp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.HasKey("RefreshTokenId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Role", b =>
                {
                    b.Property<Guid>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RoleArabicName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RoleEnglishName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Son", b =>
                {
                    b.Property<Guid>("SonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CurrentATMCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrentBalance")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<decimal>("DailyLimit")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SonNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SonNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("SonId");

                    b.HasIndex("CurrentATMCardId");

                    b.HasIndex("ParentId");

                    b.ToTable("Sons");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPage", b =>
                {
                    b.Property<Guid>("SystemPageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("PageArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageEnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PageIndex")
                        .HasColumnType("int");

                    b.Property<string>("PageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ParentPageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SystemPageId");

                    b.HasIndex("ParentPageId");

                    b.ToTable("SystemPages");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPageAction", b =>
                {
                    b.Property<Guid>("SystemPageActionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ActionArabicName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionEnglishName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionUniqueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SystemPageId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SystemPageActionId");

                    b.HasIndex("SystemPageId");

                    b.ToTable("SystemPageActions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.TransactionCommission", b =>
                {
                    b.Property<Guid>("TransactionCommissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<decimal>("FixedCommissionValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("POSMachineId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("POSMachineTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParentWalletTransactionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("PercentageCommissionValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.Property<decimal>("TransactionValue")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VendorFixedCommissionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("VendorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("VendorPercentageCommissionValue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TransactionCommissionId");

                    b.HasIndex("POSMachineId");

                    b.HasIndex("POSMachineTransactionId");

                    b.HasIndex("ParentWalletTransactionId");

                    b.HasIndex("VendorId");

                    b.ToTable("TransactionCommissions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Image")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<bool?>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("NameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool?>("Online")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UserType")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.UserRole", b =>
                {
                    b.Property<Guid>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserRoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Vendor", b =>
                {
                    b.Property<Guid>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NEWID())");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<Guid>("CreationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("CurrentBalance")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAdd()
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValueSql("((0))");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullNameAr")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullNameEn")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("GoogleLocation")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModificationUser")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Phone1")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResponsiblePerson")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("VendorId");

                    b.HasIndex("CityId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCard", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCardType", "ATMCardType")
                        .WithMany("ATMCards")
                        .HasForeignKey("ATMCardTypeId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Son", "Son")
                        .WithMany("ATMCards")
                        .HasForeignKey("SonId")
                        .IsRequired();

                    b.Navigation("ATMCardType");

                    b.Navigation("Son");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardHistory", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCard", "ATMCard")
                        .WithMany("ATMCardHistories")
                        .HasForeignKey("ATMCardId")
                        .IsRequired();

                    b.Navigation("ATMCard");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardTransaction", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCard", "ATMCard")
                        .WithMany("ATMCardTransactions")
                        .HasForeignKey("ATMCardId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("ATMCardTransactions")
                        .HasForeignKey("POSMachineId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("ATMCardTransactions")
                        .HasForeignKey("ParentId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Son", "Son")
                        .WithMany("ATMCardTransactions")
                        .HasForeignKey("SonId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Vendor", "Vendor")
                        .WithMany("ATMCardTransactions")
                        .HasForeignKey("VendorId");

                    b.Navigation("ATMCard");

                    b.Navigation("Parent");

                    b.Navigation("POSMachine");

                    b.Navigation("Son");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ActionsInRoles", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Role", "Role")
                        .WithMany("ActionsInRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.SystemPageAction", "SystemPageAction")
                        .WithMany("ActionsInRoles")
                        .HasForeignKey("SystemPageActionId")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("SystemPageAction");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.City", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Governorate", "Governorate")
                        .WithMany("Cities")
                        .HasForeignKey("GovernorateId")
                        .IsRequired();

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachine", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Vendor", "Vendor")
                        .WithMany("POSMachines")
                        .HasForeignKey("VendorId")
                        .IsRequired();

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachineLoginHistory", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("POSMachineLoginHistories")
                        .HasForeignKey("POSMachineId")
                        .IsRequired();

                    b.Navigation("POSMachine");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachinePinCodeHistory", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("POSMachinePinCodeHistories")
                        .HasForeignKey("POSMachineId")
                        .IsRequired();

                    b.Navigation("POSMachine");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachineTransaction", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCard", "ATMCard")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("ATMCardId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.User", "AdminUser")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("AdminUserId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("POSMachineId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("ParentId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachineTransaction", "ReferenceTransaction")
                        .WithMany("RefundTransactions")
                        .HasForeignKey("ReferenceTransactionId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Son", "Son")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("SonId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Vendor", "Vendor")
                        .WithMany("POSMachineTransactions")
                        .HasForeignKey("VendorId")
                        .IsRequired();

                    b.Navigation("AdminUser");

                    b.Navigation("ATMCard");

                    b.Navigation("Parent");

                    b.Navigation("POSMachine");

                    b.Navigation("ReferenceTransaction");

                    b.Navigation("Son");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Parent", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("City");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentLoginHistory", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("ParentLoginHistories")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentMobileRegistration", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("ParentMobileRegistrations")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentNotification", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.NotificationSchedule", "NotificationSchedule")
                        .WithMany("NotificationParents")
                        .HasForeignKey("NotificationScheduleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("NotificationParents")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NotificationSchedule");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentPinCodeHistory", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("ParentPinCodeHistories")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentWalletTransaction", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCard", "ATMCard")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("ATMCardId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.User", "AdminUser")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("AdminUserId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("POSMachineId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Son", "Son")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("SonId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Vendor", "Vendor")
                        .WithMany("ParentWalletTransactions")
                        .HasForeignKey("VendorId");

                    b.Navigation("AdminUser");

                    b.Navigation("ATMCard");

                    b.Navigation("Parent");

                    b.Navigation("POSMachine");

                    b.Navigation("Son");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Son", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.ATMCard", "CurrentATMCard")
                        .WithMany()
                        .HasForeignKey("CurrentATMCardId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.Parent", "Parent")
                        .WithMany("Sons")
                        .HasForeignKey("ParentId")
                        .IsRequired();

                    b.Navigation("CurrentATMCard");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPage", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.SystemPage", "ParentPage")
                        .WithMany("SubPages")
                        .HasForeignKey("ParentPageId")
                        .IsRequired();

                    b.Navigation("ParentPage");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPageAction", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.SystemPage", "SystemPage")
                        .WithMany("SystemPageActions")
                        .HasForeignKey("SystemPageId")
                        .IsRequired();

                    b.Navigation("SystemPage");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.TransactionCommission", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachine", "POSMachine")
                        .WithMany("TransactionCommissions")
                        .HasForeignKey("POSMachineId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.POSMachineTransaction", "POSMachineTransaction")
                        .WithMany("TransactionCommissions")
                        .HasForeignKey("POSMachineTransactionId");

                    b.HasOne("Puzzle.Masroofi.Core.Models.ParentWalletTransaction", "ParentWalletTransaction")
                        .WithMany("TransactionCommissions")
                        .HasForeignKey("ParentWalletTransactionId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.Vendor", "Vendor")
                        .WithMany("TransactionCommissions")
                        .HasForeignKey("VendorId");

                    b.Navigation("ParentWalletTransaction");

                    b.Navigation("POSMachine");

                    b.Navigation("POSMachineTransaction");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.UserRole", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .IsRequired();

                    b.HasOne("Puzzle.Masroofi.Core.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Vendor", b =>
                {
                    b.HasOne("Puzzle.Masroofi.Core.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCard", b =>
                {
                    b.Navigation("ATMCardHistories");

                    b.Navigation("ATMCardTransactions");

                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachineTransactions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ATMCardType", b =>
                {
                    b.Navigation("ATMCards");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Governorate", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.NotificationSchedule", b =>
                {
                    b.Navigation("NotificationParents");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachine", b =>
                {
                    b.Navigation("ATMCardTransactions");

                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachineLoginHistories");

                    b.Navigation("POSMachinePinCodeHistories");

                    b.Navigation("POSMachineTransactions");

                    b.Navigation("TransactionCommissions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.POSMachineTransaction", b =>
                {
                    b.Navigation("RefundTransactions");

                    b.Navigation("TransactionCommissions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Parent", b =>
                {
                    b.Navigation("ATMCardTransactions");

                    b.Navigation("NotificationParents");

                    b.Navigation("ParentLoginHistories");

                    b.Navigation("ParentMobileRegistrations");

                    b.Navigation("ParentPinCodeHistories");

                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachineTransactions");

                    b.Navigation("Sons");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.ParentWalletTransaction", b =>
                {
                    b.Navigation("TransactionCommissions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Role", b =>
                {
                    b.Navigation("ActionsInRoles");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Son", b =>
                {
                    b.Navigation("ATMCards");

                    b.Navigation("ATMCardTransactions");

                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachineTransactions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPage", b =>
                {
                    b.Navigation("SubPages");

                    b.Navigation("SystemPageActions");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.SystemPageAction", b =>
                {
                    b.Navigation("ActionsInRoles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.User", b =>
                {
                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachineTransactions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("Puzzle.Masroofi.Core.Models.Vendor", b =>
                {
                    b.Navigation("ATMCardTransactions");

                    b.Navigation("ParentWalletTransactions");

                    b.Navigation("POSMachines");

                    b.Navigation("POSMachineTransactions");

                    b.Navigation("TransactionCommissions");
                });
#pragma warning restore 612, 618
        }
    }
}
